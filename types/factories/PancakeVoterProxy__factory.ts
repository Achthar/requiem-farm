/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PancakeVoterProxy,
  PancakeVoterProxyInterface,
} from "../PancakeVoterProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610315806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd146100e4578063313ce567146100fe57806370a082311461011c57806395d89b4114610142578063e168c3ec1461014a575b600080fd5b61006f61016e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ec610191565b60408051918252519081900360200190f35b610106610210565b6040805160ff9092168252519081900360200190f35b6100ec6004803603602081101561013257600080fd5b50356001600160a01b0316610215565b61006f6102a9565b6101526102c8565b604080516001600160a01b039092168252519081900360200190f35b6040805180820190915260098152685359525550564f544560b81b602082015290565b6000729cf7bc57584b7998236eff51b98a168dcea9b06001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101df57600080fd5b505afa1580156101f3573d6000803e3d6000fd5b505050506040513d602081101561020957600080fd5b5051905090565b601290565b6000729cf7bc57584b7998236eff51b98a168dcea9b06001600160a01b03166370a08231836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561027757600080fd5b505afa15801561028b573d6000803e3d6000fd5b505050506040513d60208110156102a157600080fd5b505192915050565b604080518082019091526005815264053595255560dc1b602082015290565b729cf7bc57584b7998236eff51b98a168dcea9b08156fea264697066735822122064aeb6e144e7b3ab0eaf679b27f57bd90ac934aac7fabbd5e5f6b732bd1d5ee664736f6c634300060c0033";

export class PancakeVoterProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PancakeVoterProxy> {
    return super.deploy(overrides || {}) as Promise<PancakeVoterProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PancakeVoterProxy {
    return super.attach(address) as PancakeVoterProxy;
  }
  connect(signer: Signer): PancakeVoterProxy__factory {
    return super.connect(signer) as PancakeVoterProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeVoterProxyInterface {
    return new utils.Interface(_abi) as PancakeVoterProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PancakeVoterProxy {
    return new Contract(address, _abi, signerOrProvider) as PancakeVoterProxy;
  }
}
